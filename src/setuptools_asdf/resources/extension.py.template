"""
ASDF extension module for ${package}.  This module is automatically
generated by the setuptools_asdf plugin.
"""

import os
from urllib.request import pathname2url, urljoin


_PACKAGE_ROOT = os.path.abspath(os.path.dirname(__file__))


def _locate_directory(name):
    path = os.path.join(_PACKAGE_ROOT, name)
    if os.path.exists(path):
        return path

    path = os.path.join(_PACKAGE_ROOT, ${develop_path_components})
    if os.path.exists(path):
        return os.path.abspath(path)

    raise RuntimeError(f"Unable to locate {name} directory")


_SCHEMAS_ROOT_URL = urljoin("file:", pathname2url(_locate_directory("schemas")))


_TAG_TO_SCHEMA_ID = {
$tag_to_schema_id_pairs
}


_SCHEMA_ID_TO_RELATIVE_URL = {
$schema_id_to_relative_url_pairs
}


class ${extension_class_name}:
    """
    TODO
    """

    @property
    def types(self):
        return []

    def tag_mapping(self, tag):
        return _TAG_TO_SCHEMA_ID.get(tag)

    def url_mapping(self, schema_id):
        if schema_id not in _SCHEMA_ID_TO_RELATIVE_PATH:
            return None

        relative_url = _SCHEMA_ID_TO_RELATIVE_URL[schema_id]
        return urljoin(_SCHEMAS_ROOT_URL, relative_url)
